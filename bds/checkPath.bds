#string fastaRef
## bamFiles directory is populated with unsorted bam files from alignment step before hand
#string bamFiles = "bamFiles"
#string preqcBamFiles = "preqcBamFiles"
#
#if ( !bamFiles.exists() ) bamFiles.mkdir()
#if ( !preqcBamFiles.exists() ) preqcBamFiles.mkdir()
#
#for ( string bamFile : bamFiles.dir("*bam") ) {
#    string sortedName = preqcBamFiles+"/"+bamFile.baseName().swapExt("Aligned.out.bam", "sorted.bam")
#    
#    #task (sortedName <- bamFile)
#    #    sys echo "Hi"
#       #sys echo picard SortSam TMP_DIR=tmp/ \
#       #                 VALIDATION_STRINGENCY=LENIENT \
#       #                 INPUT=$bamFile \
#       #                 OUTPUT=$sortedName \
#       #                 SORT_ORDER=coordinate
#
#    #string reorderedName = sortedName.swapExt(".bam", "_reordered.bam")
#
#    #task (reorderedName <- sortedName)
#    #    sys echo "Hi again"
#       #sys echo picard ReorderSam TMP_DIR=tmp/ \
#       #                    INPUT=$bamFile \
#       #                    OUTPUT=$sortedName \
#       #                    REFERENCE=$fastaRef
#}
for ( string bamFile : bamFiles.dir("*bam") ) {                                                                         
    string sortedName = preqcBamFiles + "/" + bamFile.baseName().swapExt("Aligned.out.bam", "sorted.bam")

    task( sortedName <- bamFile ) {
      sys echo picard SortSam TMP_DIR=tmp/ VALIDATION_STRINGENCY=LENIENT INPUT=$bamFile OUTPUT=$sortedName SORT_ORDER=coordinate                
    }
    #string reorderedName = sortedName.swapExt(".bam", "_reordered.bam") 
    #task ( reorderedName <- sortedName ) 
    #    sys echo picard ReorderSam TMP_DIR=tmp/ INPUT=$sortedName OUTPUT=$reorderedName                                                                            
}
